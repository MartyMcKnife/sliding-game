array looks like

[[1,2,3],
[4,5,6],
[7,8,9]]

//Swap Elements in Multidimensional Array
FUNCTION Swap takes array, position1, position2
    temp = array[position1[0]][position1[1]]
    array[position1[0]][position1[1]]] = array[position2[0]][position2[1]]
    array[position2[0]][position2[1]] = temp
    return array

//Find item coords
FUNCTION FindItem takes array, item
    index = [0, 0]
    FOR each row in array
        FOR each item in sub array
            IF num = element
                index = [rowIndex, itemIndex]
    return index

FUNCTION FindNearby takes array, itemPosition
    iLeft = {item: array[index[0]][index[1] - 1], position: [[index[0]], [index[1] - 1]]}
    iRight = {item: array[index[0]][index[1] + 1], position: [[index[0]], [index[1] + 1]]}
    iTop = {item: array[index[0] - 1][index[1]], position: [[index[0] - 1], [index[1]]}
    iBottom = {item: array[index[0] + 1][index[1]], position: [[index[0] + 1], [index[1]]}

    return [iLeft, iRight, iTop, iBottom]

//Update 2-D Array
FUNCTION moveDirection takes array, element
    index = CALL FindItem with array, element
            
    items = CALL FindNearby with array, index

    FIND LOWEST from items.item
    
    IF itemsLowest.item > 0
        return array
    
    CALL Swap with array, itemsLowest.position, index
    RETURN array

//Shuffle 1D Array
FUNCTION shuffle1D takes array
    FOR each item in array
        i = itemIndex
        j = FLOOR(RANDOM * i + 1)
        temp = array[i]
        array[i] = array[j]
        array[j] = temp

//Shuffle 2D Array
FUNCTION shuffle2D takes array, times (default = 40)
    FOR each time in times
            index = CALL FindItem with array, 0
            nearby = CALL FindNearby with array, index

            PICK RANDOM from nearby

            CALL Swap with array, nearby[RANDOM].position, index

    RETURN array
    

//Generate Game
//Rather than generating based of array, we will do a bunch of random moves
//This will also ensure that game is solvable, and auto-solve can be implemented at a later point

FUNCTION genGame takes rows, cols
    total = rows * cols

    arr = []

    FOR numR in rows
        tempArr = []
        FOR numC in cols
            INSERT total to tempArr
            total = total - 1
        INSERT tempArr to arr
    
    CALL shuffle2D with arr
    return arr


